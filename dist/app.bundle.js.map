{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://codecampus/webpack/runtime/create fake namespace object","webpack://codecampus/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://codecampus/./node_modules/es5-ext/global.js","webpack://codecampus/./node_modules/websocket/lib/browser.js","webpack://codecampus/./node_modules/websocket/lib/version.js","webpack://codecampus/webpack/bootstrap","webpack://codecampus/webpack/runtime/compat get default export","webpack://codecampus/webpack/runtime/define property getters","webpack://codecampus/webpack/runtime/hasOwnProperty shorthand","webpack://codecampus/webpack/runtime/make namespace object","webpack://codecampus/./src/script/routers/url-parser.js","webpack://codecampus/./src/script/components/views/blog.js","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/types.js","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/helper.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/version.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/constants.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://codecampus/./src/script/data/fetch-api.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://codecampus/./src/script/components/webpages/pathCourse.js","webpack://codecampus/./src/script/components/views/landing.js","webpack://codecampus/./src/script/routers/routes.js","webpack://codecampus/./src/script/components/views/app.js","webpack://codecampus/./src/script/index.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const UrlParser = {\r\n  parseActiveUrlWithCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    const splitedUrl = this._urlSplitter(url);\r\n    return this._urlCombiner(splitedUrl);\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner() {\r\n    const url = window.location.hash.slice(1).toLowerCase();\r\n    return this._urlSplitter(url);\r\n  },\r\n\r\n  _urlSplitter(url) {\r\n    const urlsSplits = url.split('/');\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null,\r\n    };\r\n  },\r\n\r\n  _urlCombiner(splitedUrl) {\r\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\r\n          + (splitedUrl.id ? '/:id' : '')\r\n          + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\r\n  },\r\n};\r\n\r\nexport default UrlParser;\r\n","const blog = {\r\n  async render() {\r\n    return `\r\n        <h1>hello world</h1>\r\n        `;\r\n  },\r\n  async afterRender() {\r\n    //\r\n  },\r\n};\r\n\r\nexport default blog;","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        super.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","import crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=PostgrestBuilder.js.map","import PostgrestBuilder from './PostgrestBuilder';\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order foreign tables, but it doesn't affect the ordering of the\n     * current table.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.foreignTable - Set this to order a foreign table by foreign\n     * columns\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `from` and `to` inclusively.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = this.headers['Accept'];\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param foreignTable - Set this to filter on foreign tables instead of the\n     * current table\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export const version = '1.7.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './PostgrestQueryBuilder';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nimport { DEFAULT_HEADERS } from './constants';\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head) {\n            method = 'HEAD';\n            Object.entries(args).forEach(([name, value]) => {\n                url.searchParams.append(name, `${value}`);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url,\n            headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","export const version = '2.7.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    /**\n     * listen to Postgres changes.\n     */\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const status = yield channel.unsubscribe();\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    removeAllChannels() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n            this.disconnect();\n            return values_1;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            if (eventsPerSecondLimitMs > 0) {\n                this.inThrottle = true;\n                setTimeout(() => {\n                    this.inThrottle = false;\n                }, eventsPerSecondLimitMs);\n            }\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        return (yield import('cross-fetch')).Response;\n    }\n    return Response;\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError } from '../lib/errors';\nimport { get, post, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: 'PUT',\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for one minute.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     */\n    createSignedUploadUrl(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers: this.headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.5.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return CrossFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.setItem(key, JSON.stringify(data));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = yield storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.removeItem(key);\n});\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time) {\n    return new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = yield fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        }))();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nfunction sha256(randomString) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const encoder = new TextEncoder();\n        const encodedData = encoder.encode(randomString);\n        const hash = yield crypto.subtle.digest('SHA-256', encodedData);\n        const bytes = new Uint8Array(hash);\n        return Array.from(bytes)\n            .map((c) => String.fromCharCode(c))\n            .join('');\n    });\n}\nfunction base64urlencode(str) {\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport function generatePKCEChallenge(verifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof crypto === 'undefined') {\n            console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n            return verifier;\n        }\n        const hashed = yield sha256(verifier);\n        return base64urlencode(hashed);\n    });\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status) {\n        super(message, status);\n        this.name = 'AuthApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status) {\n        super(message);\n        this.name = name;\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status);\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const NETWORK_ERROR_CODES = [502, 503, 504];\n    if (!looksLikeFetchResponse(error)) {\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n    }\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n    }\n    else {\n        // got a response from server that is not in the 500...599 range - should not retry\n        error\n            .json()\n            .then((err) => {\n            reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((e) => {\n            // not a valid json response\n            reject(new AuthUnknownError(_getErrorMessage(e), e));\n        });\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\n            headers['Authorization'] = `Bearer ${options.jwt}`;\n        }\n        const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            qs['redirect_to'] = options.redirectTo;\n        }\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n    });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        session.expires_at = expiresAt(data.expires_in);\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id, shouldSoftDelete = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    body: {\n                        should_soft_delete: shouldSoftDelete,\n                    },\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","// Generated by genversion.\nexport const version = '2.28.0';\n//# sourceMappingURL=version.js.map","import { supportsLocalStorage } from './helpers';\nconst localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\nexport default localStorageAdapter;\n//# sourceMappingURL=local-storage.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthRetryableFetchError, AuthSessionMissingError, AuthUnknownError, isAuthApiError, isAuthError, } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, getParameterByName, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, generatePKCEVerifier, generatePKCEChallenge, } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || localStorageAdapter;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', (event) => {\n                this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                const isPKCEFlow = yield this._isPKCEFlow();\n                if ((this.detectSessionInUrl && this._isImplicitGrantFlow()) || isPKCEFlow) {\n                    const { data, error } = yield this._getSessionFromUrl(isPKCEFlow);\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    setTimeout(() => {\n                        if (redirectType === 'recovery') {\n                            this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                        }\n                        else {\n                            this._notifyAllSubscribers('SIGNED_IN', session);\n                        }\n                    }, 0);\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { error };\n                }\n                return {\n                    error: new AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                yield this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    signInWithPassword(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return yield this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n            });\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    exchangeCodeForSession(authCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const codeVerifier = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error || !data)\n                return { data: { user: null, session: null }, error };\n            if (data.session) {\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        });\n    }\n    /**\n     * Allows signing in with an ID token issued by certain supported providers.\n     * The ID token is verified for validity and a new session is established.\n     *\n     * @experimental\n     */\n    signInWithIdToken(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            try {\n                const { options, provider, token, nonce } = credentials;\n                const res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                    headers: this.headers,\n                    body: {\n                        provider,\n                        id_token: token,\n                        nonce,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: _sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw new Error('An error occurred on token verification.');\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    signInWithSSO(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                return yield _request(this.fetch, 'POST', `${this.url}/sso`, {\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                        : null)), { skip_http_redirect: true }),\n                    headers: this.headers,\n                    xform: _ssoResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    reauthenticate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error: sessionError, } = yield this.getSession();\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = yield _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    resend(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const endpoint = `${this.url}/resend`;\n                if ('email' in credentials) {\n                    const { email, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                else if ('phone' in credentials) {\n                    const { phone, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield getItemAsync(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    updateUser(attributes, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession.access_token || !currentSession.refresh_token) {\n                    throw new AuthSessionMissingError();\n                }\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                const payload = decodeJWTPayload(currentSession.access_token);\n                if (payload.exp) {\n                    expiresAt = payload.exp;\n                    hasExpired = expiresAt <= timeNow;\n                }\n                if (hasExpired) {\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { user: null, session: null }, error: error };\n                    }\n                    if (!refreshedSession) {\n                        return { data: { user: null, session: null }, error: null };\n                    }\n                    session = refreshedSession;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl(isPKCEFlow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new AuthImplicitGrantRedirectError('No browser detected.');\n                if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n                    throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                else if (this.flowType == 'pkce' && !isPKCEFlow) {\n                    throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                if (isPKCEFlow) {\n                    const authCode = getParameterByName('code');\n                    if (!authCode)\n                        throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                    const { data, error } = yield this.exchangeCodeForSession(authCode);\n                    if (error)\n                        throw error;\n                    if (!data.session)\n                        throw new AuthPKCEGrantCodeExchangeError('No session detected.');\n                    let url = new URL(window.location.href);\n                    url.searchParams.delete('code');\n                    window.history.replaceState(window.history.state, '', url.toString());\n                    return { data: { session: data.session, redirectType: null }, error: null };\n                }\n                const error_description = getParameterByName('error_description');\n                if (error_description) {\n                    const error_code = getParameterByName('error_code');\n                    if (!error_code)\n                        throw new AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = getParameterByName('error');\n                    if (!error)\n                        throw new AuthImplicitGrantRedirectError('No error detected.');\n                    throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = getParameterByName('provider_token');\n                const provider_refresh_token = getParameterByName('provider_refresh_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = getParameterByName('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return (isBrowser() &&\n            (Boolean(getParameterByName('access_token')) ||\n                Boolean(getParameterByName('error_description'))));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    _isPKCEFlow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentStorageContent = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            return isBrowser() && Boolean(getParameterByName('code')) && Boolean(currentStorageContent);\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n                        return { error };\n                    }\n                }\n            }\n            yield this._removeSession();\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        this.emitInitialSession(id);\n        return { data: { subscription } };\n    }\n    emitInitialSession(id) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error, } = yield this.getSession();\n                if (error)\n                    throw error;\n                (_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n            }\n            catch (err) {\n                (_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * This method supports the PKCE flow.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            }\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: {\n                        email,\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                        gotrue_meta_security: { captcha_token: options.captchaToken },\n                    },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startedAt = Date.now();\n                // will attempt to refresh the token with exponential backoff\n                return yield retryable((attempt) => __awaiter(this, void 0, void 0, function* () {\n                    yield sleep(attempt * 200); // 0, 200, 400, 800, ...\n                    return yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                        body: { refresh_token: refreshToken },\n                        headers: this.headers,\n                        xform: _sessionResponse,\n                    });\n                }), (attempt, _, result) => result &&\n                    result.error &&\n                    result.error instanceof AuthRetryableFetchError &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams,\n            });\n            // try to open on the browser\n            if (isBrowser() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n            }\n            return { data: { provider, url }, error: null };\n        });\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield getItemAsync(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new Deferred();\n                if (!refreshToken) {\n                    throw new AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session, broadcast = true) {\n        if (this.broadcastChannel && broadcast) {\n            this.broadcastChannel.postMessage({ event, session });\n        }\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield removeItemAsync(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n        });\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    _startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._stopAutoRefresh();\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n            this.autoRefreshTicker = ticker;\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n            }\n            else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n            }\n            // run the tick immediately\n            yield this._autoRefreshTokenTick();\n        });\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    _stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ticker = this.autoRefreshTicker;\n            this.autoRefreshTicker = null;\n            if (ticker) {\n                clearInterval(ticker);\n            }\n        });\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._startAutoRefresh();\n        });\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._stopAutoRefresh();\n        });\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    _autoRefreshTokenTick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            try {\n                const { data: { session }, } = yield this.getSession();\n                if (!session || !session.refresh_token || !session.expires_at) {\n                    return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n                    yield this._callRefreshToken(session.refresh_token);\n                }\n            }\n            catch (e) {\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n        });\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    _handleVisibilityChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                if (this.autoRefreshToken) {\n                    // in non-browser environments the refresh token ticker runs always\n                    this.startAutoRefresh();\n                }\n                return false;\n            }\n            try {\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n                // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n                yield this._onVisibilityChanged(true); // initial call\n            }\n            catch (error) {\n                console.error('_handleVisibilityChange', error);\n            }\n        });\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    _onVisibilityChanged(isInitial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                if (!isInitial) {\n                    // initial visibility change setup is handled in another flow under #initialize()\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n                if (this.autoRefreshToken) {\n                    // in browser environments the refresh token ticker runs only on focused tabs\n                    // which prevents race conditions\n                    this._startAutoRefresh();\n                }\n            }\n            else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                }\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlParams = [`provider=${encodeURIComponent(provider)}`];\n            if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n            }\n            if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n            }\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                const codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                const flowParams = new URLSearchParams({\n                    code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                    code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n                });\n                urlParams.push(flowParams.toString());\n            }\n            if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                const query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n            }\n            return `${this.url}/authorize?${urlParams.join('&')}`;\n        });\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body: {\n                        friendly_name: params.friendlyName,\n                        factor_type: params.factorType,\n                        issuer: params.issuer,\n                    },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                    body: { code: params.code, challenge_id: params.challengeId },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\n//# sourceMappingURL=constants.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","export function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    return {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n    };\n}\n//# sourceMappingURL=helpers.js.map","/* eslint-disable consistent-return */\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = 'https://cjujplctbdbrybujcfly.supabase.co';\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNqdWpwbGN0YmRicnlidWpjZmx5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODU2MjE3ODIsImV4cCI6MjAwMTE5Nzc4Mn0.S5lDd5jFzWbIJHAgsZ0gOkrNAPhxWzoRi5Niwky0ocg';\r\nconst supabase = createClient(supabaseUrl, supabaseKey);\r\n\r\nexport const getPath = async () => {\r\n  const { data: pathCourse, error } = await supabase\r\n    .from('pathCourse')\r\n    .select('*');\r\n\r\n  if (error) {\r\n    console.log(error);\r\n    return;\r\n  }\r\n  return pathCourse;\r\n};","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { getPath } from '../../data/fetch-api';\r\n\r\nexport class PathCourse extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async connectedCallback() {\r\n    try {\r\n      const pathCourses = await getPath();\r\n\r\n      const pathList = document.createElement('div');\r\n      pathList.classList.add('path-list');\r\n\r\n      pathCourses.forEach((paths) => {\r\n        pathList.innerHTML += `\r\n              <div class=\"card\" style=\"width: 18rem;\">\r\n                <img src=\"${paths.pictUrl}\">\r\n                <div class=\"card-body\">\r\n                    <a>${paths.name}</a>\r\n                </div>\r\n             </div>\r\n              `;\r\n      });\r\n      this.appendChild(pathList);\r\n    } catch (error) {\r\n      console.log(error);\r\n      const errorMessage = document.createElement('p');\r\n      errorMessage.textContent = 'Failed to load restaurant data';\r\n      this.appendChild(errorMessage);\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define('path-course', PathCourse);","import { PathCourse } from '../webpages/pathCourse';\r\n\r\nconst home = {\r\n  async render() {\r\n    return `\r\n          <h1>hello home</h1>\r\n          <section>\r\n            <div id=\"pathSection\" class=\"row\">\r\n\r\n            </div>\r\n          </section>\r\n          `;\r\n  },\r\n  async afterRender() {\r\n    const pathContainer = document.querySelector('#pathSection');\r\n    const pathContent = new PathCourse();\r\n    pathContainer.appendChild(pathContent);\r\n  },\r\n};\r\n\r\nexport default home;\r\n","import blog from '../components/views/blog';\r\nimport home from '../components/views/landing';\r\n\r\nconst routes = {\r\n  '/': home,\r\n  '/blog': blog,\r\n  '/home': home,\r\n};\r\n\r\nexport default routes;","import UrlParser from '../../routers/url-parser';\r\nimport routes from '../../routers/routes';\r\n\r\nclass Apps {\r\n  constructor({\r\n    button, navbar, navDrawer, content, footer,\r\n  }) {\r\n    this._button = button;\r\n    this._navbar = navbar;\r\n    this._navDrawer = navDrawer;\r\n    this._content = content;\r\n    this._footer = footer;\r\n  }\r\n\r\n  async renderPage() {\r\n    const url = UrlParser.parseActiveUrlWithCombiner();\r\n    const page = routes[url];\r\n    this._content.innerHTML = await page.render();\r\n    await page.afterRender();\r\n  }\r\n}\r\nexport default Apps;","/* eslint-disable new-cap */\r\nimport Apps from './components/views/app';\r\n\r\nconst app = new Apps({\r\n  navbar: document.querySelector('#navigation-bars'),\r\n  content: document.querySelector('#main-Content'),\r\n  footer: document.querySelector('#footers'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n});"],"names":["leafPrototypes","getProto","global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","naiveFallback","window","globalThis","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","getPrototypeOf","t","ns","r","def","current","definition","o","enumerable","toStringTag","parseActiveUrlWithCombiner","hash","splitedUrl","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","resource","id","verb","concat","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","render","_callee","_context","afterRender","_callee2","_context2","FunctionsError","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","customFetch","_fetch","__awaiter","_arguments","P","fulfilled","step","resolveFetch","setAuth","token","Authorization","functionName","_a","functionArgs","_headers","stringify","assign","catch","fetchError","isRelayError","data","PostgrestBuilder","builder","shouldThrowOnError","schema","isMaybeSingle","throwOnError","onfulfilled","onrejected","includes","res","_b","_c","count","countHeader","match","contentRange","parseInt","code","details","hint","_d","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","c","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","filter","Boolean","forMediatype","rollback","returns","PostgrestFilterBuilder","eq","neq","gt","gte","lt","lte","like","pattern","likeAllOf","patterns","likeAnyOf","ilike","ilikeAllOf","ilikeAnyOf","is","in","cleanedValues","s","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","not","operator","or","filters","PostgrestQueryBuilder","head","allowEmpty","insert","defaultToNull","prefersHeaders","reduce","acc","x","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","unshift","DEFAULT_HEADERS","PostgrestClient","relation","URL","rpc","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","REALTIME_PRESENCE_LISTEN_EVENTS","PostgresTypes","Timer","timerCalc","timer","tries","clearTimeout","scheduleTimeout","setTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","event","ref","payload","Push","channel","timeout","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_on","_cancelTimeout","_matchReceive","trigger","_trigger","destroy","_off","h","RealtimePresence","opts","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","presenceRefsToRemove","func","metas","presence","convertChangeData","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","console","log","lastIdx","closeBrace","arr","valTrim","_","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","presenceState","track","untrack","on","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bind","_e","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","Math","floor","encode","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","values_1","all","kind","msg","connectionState","connecting","Connecting","Open","closing","Closing","Closed","chan","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","StorageError","__isStorageError","isStorageError","StorageApiError","toJSON","StorageUnknownError","originalError","_getErrorMessage","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","duplex","upload","uploadToSignedUrl","createSignedUploadUrl","signedUrl","move","fromPath","toPath","sourceKey","destinationKey","copy","Key","createSignedUrl","expiresIn","transform","downloadQueryParam","download","encodeURI","signedURL","createSignedUrls","paths","datum","renderPath","transformationQuery","transformOptsToQueryString","queryString","getPublicUrl","_queryString","publicUrl","prefixes","list","width","height","resize","quality","StorageBucketApi","listBuckets","getBucket","createBucket","public","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","put","emptyBucket","deleteBucket","StorageClient","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","document","localStorageWriteTests","tested","supportsLocalStorage","localStorage","randomKey","random","setItem","removeItem","getParameterByName","href","results","exec","setItemAsync","storage","getItemAsync","getItem","removeItemAsync","Deferred","promiseConstructor","rej","decodeJWTPayload","base64Url","chr1","chr2","chr3","enc1","enc2","enc3","enc4","base64","decodeBase64URL","dec2hex","dec","substr","generatePKCEVerifier","array","Uint32Array","crypto","charSet","charSetLen","verifier","getRandomValues","generatePKCEChallenge","warn","hashed","randomString","encodedData","TextEncoder","subtle","digest","sha256","btoa","AuthError","__isAuthError","isAuthError","AuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","_request","jwt","qs","redirectTo","maybeResponse","xform","_sessionResponse","session","refresh_token","expires_in","hasSession","expires_at","round","Date","now","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","p","getOwnPropertySymbols","propertyIsEnumerable","__rest","properties","_noResolveJsonResponse","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","_g","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","flowType","AUTO_REFRESH_TICK_DURATION","GoTrueClient","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","admin","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","_notifyAllSubscribers","initialize","_initialize","isPKCEFlow","_isPKCEFlow","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signUp","password","codeChallenge","codeChallengeMethod","codeVerifier","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","code_challenge","code_challenge_method","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","auth_code","code_verifier","signInWithIdToken","nonce","id_token","signInWithOtp","create_user","shouldCreateUser","verifyOtp","signInWithSSO","provider_id","providerId","domain","skip_http_redirect","reauthenticate","sessionError","getSession","endpoint","currentSession","maybeSession","_isValidSession","_callRefreshToken","getUser","updateUser","sessionData","userError","_decodeJWT","setSession","timeNow","expiresAt","hasExpired","exp","refreshedSession","token_type","refreshSession","history","replaceState","error_code","provider_token","provider_refresh_token","currentStorageContent","isAuthApiError","onAuthStateChange","subscription","emitInitialSession","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","isRetryable","accept","attempt","Infinity","retryable","_getUrlForProvider","postMessage","_persistSession","_removeVisibilityChangedCallback","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","Deno","unrefTimer","startAutoRefresh","stopAutoRefresh","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","flowParams","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","amr","SupabaseAuthClient","DEFAULT_GLOBAL_OPTIONS","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","SupabaseClient","supabaseUrl","_h","_supabaseUrl","realtimeUrl","authUrl","storageUrl","functionsUrl","defaultStorageKey","hostname","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","globalOptions","applySettingDefaults","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","functions","authHeaders","apikey","_handleTokenChanged","source","changedAccessToken","supabase","createClient","getPath","_yield$supabase$from$","pathCourse","_defineProperties","target","props","descriptor","prim","toPrimitive","_toPrimitive","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","instance","sham","Proxy","valueOf","PathCourse","_HTMLElement","subClass","superClass","_inherits","Constructor","protoProps","_connectedCallback","Derived","hasNativeReflectConstruct","_super","Super","NewTarget","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_classCallCheck","pathCourses","pathList","errorMessage","createElement","classList","add","innerHTML","pictUrl","appendChild","t0","textContent","HTMLElement","customElements","home","pathContainer","pathContent","querySelector","blog","app","Apps","button","navbar","navDrawer","content","footer","_button","_navbar","_navDrawer","_content","_footer","_renderPage","UrlParser","routes","renderPage"],"sourceRoot":""}