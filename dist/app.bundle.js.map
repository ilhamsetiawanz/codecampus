{"version":3,"file":"app.bundle.js","mappings":"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","sources":["webpack://codecampus/webpack/runtime/create fake namespace object","webpack://codecampus/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://codecampus/./node_modules/es5-ext/global.js","webpack://codecampus/./node_modules/websocket/lib/browser.js","webpack://codecampus/./node_modules/websocket/lib/version.js","webpack://codecampus/webpack/bootstrap","webpack://codecampus/webpack/runtime/compat get default export","webpack://codecampus/webpack/runtime/define property getters","webpack://codecampus/webpack/runtime/hasOwnProperty shorthand","webpack://codecampus/webpack/runtime/make namespace object","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/types.js","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://codecampus/./node_modules/@supabase/functions-js/dist/module/helper.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/version.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/constants.js","webpack://codecampus/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://codecampus/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://codecampus/./node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://codecampus/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://codecampus/./src/script/data/fetch-api.js","webpack://codecampus/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://codecampus/./src/script/components/webpages/pathCourse.js","webpack://codecampus/./src/script/index.js"],"sourcesContent":["var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        super.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - The name of the Function to invoke.\n     * @param options - Options for invoking the Function.\n     */\n    invoke(functionName, options = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, method, body: functionArgs } = options;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: method || 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","import crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.isMaybeSingle = builder.isMaybeSingle;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then(async (res) => {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = await res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n                // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n                // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n                if (this.isMaybeSingle && this.method === 'GET' && Array.isArray(data)) {\n                    if (data.length > 1) {\n                        error = {\n                            // https://github.com/PostgREST/postgrest/blob/a867d79c42419af16c18c3fb019eba8df992626f/src/PostgREST/Error.hs#L553\n                            code: 'PGRST116',\n                            details: `Results contain ${data.length} rows, application/vnd.pgrst.object+json requires 1 row`,\n                            hint: null,\n                            message: 'JSON object requested, multiple (or no) rows returned',\n                        };\n                        data = null;\n                        count = null;\n                        status = 406;\n                        statusText = 'Not Acceptable';\n                    }\n                    else if (data.length === 1) {\n                        data = data[0];\n                    }\n                    else {\n                        data = null;\n                    }\n                }\n            }\n            else {\n                const body = await res.text();\n                try {\n                    error = JSON.parse(body);\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (Array.isArray(error) && res.status === 404) {\n                        data = [];\n                        error = null;\n                        status = 200;\n                        statusText = 'OK';\n                    }\n                }\n                catch (_d) {\n                    // Workaround for https://github.com/supabase/postgrest-js/issues/295\n                    if (res.status === 404 && body === '') {\n                        status = 204;\n                        statusText = 'No Content';\n                    }\n                    else {\n                        error = {\n                            message: body,\n                        };\n                    }\n                }\n                if (error && this.isMaybeSingle && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        });\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => {\n                var _a, _b, _c;\n                return ({\n                    error: {\n                        message: `${(_a = fetchError === null || fetchError === void 0 ? void 0 : fetchError.name) !== null && _a !== void 0 ? _a : 'FetchError'}: ${fetchError === null || fetchError === void 0 ? void 0 : fetchError.message}`,\n                        details: `${(_b = fetchError === null || fetchError === void 0 ? void 0 : fetchError.stack) !== null && _b !== void 0 ? _b : ''}`,\n                        hint: '',\n                        code: `${(_c = fetchError === null || fetchError === void 0 ? void 0 : fetchError.code) !== null && _c !== void 0 ? _c : ''}`,\n                    },\n                    data: null,\n                    count: null,\n                    status: 0,\n                    statusText: '',\n                });\n            });\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=PostgrestBuilder.js.map","import PostgrestBuilder from './PostgrestBuilder';\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    /**\n     * Order the query result by `column`.\n     *\n     * You can call this method multiple times to order by multiple columns.\n     *\n     * You can order foreign tables, but it doesn't affect the ordering of the\n     * current table.\n     *\n     * @param column - The column to order by\n     * @param options - Named parameters\n     * @param options.ascending - If `true`, the result will be in ascending order\n     * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n     * `null`s appear last.\n     * @param options.foreignTable - Set this to order a foreign table by foreign\n     * columns\n     */\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `from` and `to` inclusively.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        // Temporary partial fix for https://github.com/supabase/postgrest-js/issues/361\n        // Issue persists e.g. for `.insert([...]).select().maybeSingle()`\n        if (this.method === 'GET') {\n            this.headers['Accept'] = 'application/json';\n        }\n        else {\n            this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        }\n        this.isMaybeSingle = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = this.headers['Accept'];\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    /**\n     * Match only rows where `column` is equal to `value`.\n     *\n     * To check if the value of `column` is NULL, you should use `.is()` instead.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is not equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is greater than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is less than or equal to `value`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `like(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-sensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    likeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `like(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches `pattern` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param pattern - The pattern to match with\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches all of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAllOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(all).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` matches any of `patterns` case-insensitively.\n     *\n     * @param column - The column to filter on\n     * @param patterns - The patterns to match with\n     */\n    ilikeAnyOf(column, patterns) {\n        this.url.searchParams.append(column, `ilike(any).{${patterns.join(',')}}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` IS `value`.\n     *\n     * For non-boolean columns, this is only relevant for checking if the value of\n     * `column` is NULL by setting `value` to `null`.\n     *\n     * For boolean columns, you can also set `value` to `true` or `false` and it\n     * will behave the same way as `.eq()`.\n     *\n     * @param column - The column to filter on\n     * @param value - The value to filter with\n     */\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows where `column` is included in the `values` array.\n     *\n     * @param column - The column to filter on\n     * @param values - The values array to filter with\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * `column` contains every element appearing in `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for jsonb, array, and range columns. Match only rows where\n     * every element appearing in `column` is contained by `value`.\n     *\n     * @param column - The jsonb, array, or range column to filter on\n     * @param value - The jsonb, array, or range value to filter with\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is greater than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or greater than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is less than any element in `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where every element in\n     * `column` is either contained in `range` or less than any element in\n     * `range`.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for range columns. Match only rows where `column` is\n     * mutually exclusive to `range` and there can be no element between the two\n     * ranges.\n     *\n     * @param column - The range column to filter on\n     * @param range - The range to filter with\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Only relevant for array and range columns. Match only rows where\n     * `column` and `value` have an element in common.\n     *\n     * @param column - The array or range column to filter on\n     * @param value - The array or range value to filter with\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Only relevant for text and tsvector columns. Match only rows where\n     * `column` matches the query string in `query`.\n     *\n     * @param column - The text or tsvector column to filter on\n     * @param query - The query text to match with\n     * @param options - Named parameters\n     * @param options.config - The text search configuration to use\n     * @param options.type - Change how the `query` text is interpreted\n     */\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Match only rows where each column in `query` keys is equal to its\n     * associated value. Shorthand for multiple `.eq()`s.\n     *\n     * @param query - The object to filter with, with column names as keys mapped\n     * to their filter values\n     */\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    /**\n     * Match only rows which doesn't satisfy the filter.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to be negated to filter with, following\n     * PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param foreignTable - Set this to filter on foreign tables instead of the\n     * current table\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy the filter. This is an escape hatch - you\n     * should use the specific filter methods wherever possible.\n     *\n     * Unlike most filters, `opearator` and `value` are used as-is and need to\n     * follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure they are properly sanitized.\n     *\n     * @param column - The column to filter on\n     * @param operator - The operator to filter with, following PostgREST syntax\n     * @param value - The value to filter with, following PostgREST syntax\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas. Columns can be renamed when returned with `customName:columnName`\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column.\n     */\n    insert(values, { count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     *\n     * @param options.defaultToNull - Make missing fields default to `null`.\n     * Otherwise, use the default value for the column. This only applies when\n     * inserting new rows, not when merging with existing rows under\n     * `ignoreDuplicates: false`.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, defaultToNull = true, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (!defaultToNull) {\n            prefersHeaders.push('missing=default');\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        if (this.headers['Prefer']) {\n            prefersHeaders.push(this.headers['Prefer']);\n        }\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body: values,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export const version = '1.7.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './PostgrestQueryBuilder';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nimport { DEFAULT_HEADERS } from './constants';\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head) {\n            method = 'HEAD';\n            Object.entries(args).forEach(([name, value]) => {\n                url.searchParams.append(name, `${value}`);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url,\n            headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","export const version = '2.7.2';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} value The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    /**\n     * listen to Postgres changes.\n     */\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    /**\n     * Returns all created channels\n     */\n    getChannels() {\n        return this.channels;\n    }\n    /**\n     * Unsubscribes and removes a single channel\n     * @param channel A RealtimeChannel instance\n     */\n    removeChannel(channel) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const status = yield channel.unsubscribe();\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    /**\n     * Unsubscribes and removes all channels\n     */\n    removeAllChannels() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values_1 = yield Promise.all(this.channels.map((channel) => channel.unsubscribe()));\n            this.disconnect();\n            return values_1;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overridden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Returns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimitMs = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            if (eventsPerSecondLimitMs > 0) {\n                this.inThrottle = true;\n                setTimeout(() => {\n                    this.inThrottle = false;\n                }, eventsPerSecondLimitMs);\n            }\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        return (yield import('cross-fetch')).Response;\n    }\n    return Response;\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error\n            .json()\n            .then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((err) => {\n            reject(new StorageUnknownError(_getErrorMessage(err), err));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError, StorageError } from '../lib/errors';\nimport { get, post, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, Object.assign({ method, body: body, headers }, ((options === null || options === void 0 ? void 0 : options.duplex) ? { duplex: options.duplex } : {})));\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Upload a file with a token generated from `createSignedUploadUrl`.\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param token The token generated from `createSignedUploadUrl`\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadToSignedUrl(path, token, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cleanPath = this._removeEmptyFolders(path);\n            const _path = this._getFinalPath(cleanPath);\n            const url = new URL(this.url + `/object/upload/sign/${_path}`);\n            url.searchParams.set('token', token);\n            try {\n                let body;\n                const options = Object.assign({ upsert: DEFAULT_FILE_OPTIONS.upsert }, fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), { 'x-upsert': String(options.upsert) });\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const res = yield this.fetch(url.toString(), {\n                    method: 'PUT',\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed upload URL.\n     * Signed upload URLs can be used to upload files to the bucket without further authentication.\n     * They are valid for one minute.\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     */\n    createSignedUploadUrl(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                const data = yield post(this.fetch, `${this.url}/object/upload/sign/${_path}`, {}, { headers: this.headers });\n                const url = new URL(this.url + data.url);\n                const token = url.searchParams.get('token');\n                if (!token) {\n                    throw new StorageError('No token returned by API');\n                }\n                return { data: { signedUrl: url.toString(), path, token }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, Object.assign({ expiresIn }, ((options === null || options === void 0 ? void 0 : options.transform) ? { transform: options.transform } : {})), { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    download(path, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n            const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object';\n            const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n            const queryString = transformationQuery ? `?${transformationQuery}` : '';\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     * @param options.transform Transform the asset before serving it to the client.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const _queryString = [];\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `download=${options.download === true ? '' : options.download}`\n            : '';\n        if (downloadQueryParam !== '') {\n            _queryString.push(downloadQueryParam);\n        }\n        const wantsTransformation = typeof (options === null || options === void 0 ? void 0 : options.transform) !== 'undefined';\n        const renderPath = wantsTransformation ? 'render/image' : 'object';\n        const transformationQuery = this.transformOptsToQueryString((options === null || options === void 0 ? void 0 : options.transform) || {});\n        if (transformationQuery !== '') {\n            _queryString.push(transformationQuery);\n        }\n        let queryString = _queryString.join('&');\n        if (queryString !== '') {\n            queryString = `?${queryString}`;\n        }\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n    transformOptsToQueryString(transform) {\n        const params = [];\n        if (transform.width) {\n            params.push(`width=${transform.width}`);\n        }\n        if (transform.height) {\n            params.push(`height=${transform.height}`);\n        }\n        if (transform.resize) {\n            params.push(`resize=${transform.resize}`);\n        }\n        if (transform.format) {\n            params.push(`format=${transform.format}`);\n        }\n        if (transform.quality) {\n            params.push(`quality=${transform.quality}`);\n        }\n        return params.join('&');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.5.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = {\n        public: false,\n    }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     * @param options.fileSizeLimit specifies the max file size in bytes that can be uploaded to this bucket.\n     * The global file size limit takes precedence over this value.\n     * The default value is null, which doesn't set a per bucket file size limit.\n     * @param options.allowedMimeTypes specifies the allowed mime types that this bucket can accept during upload.\n     * The default value is null, which allows files with all mime types to be uploaded.\n     * Each mime type specified can be a wildcard, e.g. image/*, or a specific mime type, e.g. image/png.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, {\n                    id,\n                    name: id,\n                    public: options.public,\n                    file_size_limit: options.fileSizeLimit,\n                    allowed_mime_types: options.allowedMimeTypes,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return CrossFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof document !== 'undefined';\nconst localStorageWriteTests = {\n    tested: false,\n    writable: false,\n};\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n    if (!isBrowser()) {\n        return false;\n    }\n    try {\n        if (typeof globalThis.localStorage !== 'object') {\n            return false;\n        }\n    }\n    catch (e) {\n        // DOM exception when accessing `localStorage`\n        return false;\n    }\n    if (localStorageWriteTests.tested) {\n        return localStorageWriteTests.writable;\n    }\n    const randomKey = `lswt-${Math.random()}${Math.random()}`;\n    try {\n        globalThis.localStorage.setItem(randomKey, randomKey);\n        globalThis.localStorage.removeItem(randomKey);\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = true;\n    }\n    catch (e) {\n        // localStorage can't be written to\n        // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n        localStorageWriteTests.tested = true;\n        localStorageWriteTests.writable = false;\n    }\n    return localStorageWriteTests.writable;\n};\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.setItem(key, JSON.stringify(data));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = yield storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.removeItem(key);\n});\nexport function decodeBase64URL(value) {\n    const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    let base64 = '';\n    let chr1, chr2, chr3;\n    let enc1, enc2, enc3, enc4;\n    let i = 0;\n    value = value.replace('-', '+').replace('_', '/');\n    while (i < value.length) {\n        enc1 = key.indexOf(value.charAt(i++));\n        enc2 = key.indexOf(value.charAt(i++));\n        enc3 = key.indexOf(value.charAt(i++));\n        enc4 = key.indexOf(value.charAt(i++));\n        chr1 = (enc1 << 2) | (enc2 >> 4);\n        chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n        chr3 = ((enc3 & 3) << 6) | enc4;\n        base64 = base64 + String.fromCharCode(chr1);\n        if (enc3 != 64 && chr2 != 0) {\n            base64 = base64 + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64 && chr3 != 0) {\n            base64 = base64 + String.fromCharCode(chr3);\n        }\n    }\n    return base64;\n}\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    // Regex checks for base64url format\n    const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i;\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    if (!base64UrlRegex.test(parts[1])) {\n        throw new Error('JWT is not valid: payload is not in base64url format');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time) {\n    return new Promise((accept) => {\n        setTimeout(() => accept(null), time);\n    });\n}\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable(fn, isRetryable) {\n    const promise = new Promise((accept, reject) => {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        (() => __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < Infinity; attempt++) {\n                try {\n                    const result = yield fn(attempt);\n                    if (!isRetryable(attempt, null, result)) {\n                        accept(result);\n                        return;\n                    }\n                }\n                catch (e) {\n                    if (!isRetryable(attempt, e)) {\n                        reject(e);\n                        return;\n                    }\n                }\n            }\n        }))();\n    });\n    return promise;\n}\nfunction dec2hex(dec) {\n    return ('0' + dec.toString(16)).substr(-2);\n}\n// Functions below taken from: https://stackoverflow.com/questions/63309409/creating-a-code-verifier-and-challenge-for-pkce-auth-on-spotify-api-in-reactjs\nexport function generatePKCEVerifier() {\n    const verifierLength = 56;\n    const array = new Uint32Array(verifierLength);\n    if (typeof crypto === 'undefined') {\n        const charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~';\n        const charSetLen = charSet.length;\n        let verifier = '';\n        for (let i = 0; i < verifierLength; i++) {\n            verifier += charSet.charAt(Math.floor(Math.random() * charSetLen));\n        }\n        return verifier;\n    }\n    crypto.getRandomValues(array);\n    return Array.from(array, dec2hex).join('');\n}\nfunction sha256(randomString) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const encoder = new TextEncoder();\n        const encodedData = encoder.encode(randomString);\n        const hash = yield crypto.subtle.digest('SHA-256', encodedData);\n        const bytes = new Uint8Array(hash);\n        return Array.from(bytes)\n            .map((c) => String.fromCharCode(c))\n            .join('');\n    });\n}\nfunction base64urlencode(str) {\n    return btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport function generatePKCEChallenge(verifier) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (typeof crypto === 'undefined') {\n            console.warn('WebCrypto API is not supported. Code challenge method will default to use plain instead of sha256.');\n            return verifier;\n        }\n        const hashed = yield sha256(verifier);\n        return base64urlencode(hashed);\n    });\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n        this.status = status;\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status) {\n        super(message, status);\n        this.name = 'AuthApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport function isAuthApiError(error) {\n    return isAuthError(error) && error.name === 'AuthApiError';\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status) {\n        super(message);\n        this.name = name;\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthPKCEGrantCodeExchangeError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthPKCEGrantCodeExchangeError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status);\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const NETWORK_ERROR_CODES = [502, 503, 504];\n    if (!looksLikeFetchResponse(error)) {\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n    }\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n    }\n    else {\n        // got a response from server that is not in the 500...599 range - should not retry\n        error\n            .json()\n            .then((err) => {\n            reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((e) => {\n            // not a valid json response\n            reject(new AuthUnknownError(_getErrorMessage(e), e));\n        });\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({}, options === null || options === void 0 ? void 0 : options.headers);\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\n            headers['Authorization'] = `Bearer ${options.jwt}`;\n        }\n        const qs = (_a = options === null || options === void 0 ? void 0 : options.query) !== null && _a !== void 0 ? _a : {};\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            qs['redirect_to'] = options.redirectTo;\n        }\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n    });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        session.expires_at = expiresAt(data.expires_in);\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _ssoResponse(data) {\n    return { data, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\nexport function _noResolveJsonResponse(data) {\n    return data;\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _noResolveJsonResponse, _request, _userResponse, } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options Additional options to be included when inviting.\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n     */\n    listUsers(params) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const pagination = { nextPage: null, lastPage: 0, total: 0 };\n                const response = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                    query: {\n                        page: (_b = (_a = params === null || params === void 0 ? void 0 : params.page) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : '',\n                        per_page: (_d = (_c = params === null || params === void 0 ? void 0 : params.perPage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : '',\n                    },\n                    xform: _noResolveJsonResponse,\n                });\n                if (response.error)\n                    throw response.error;\n                const users = yield response.json();\n                const total = (_e = response.headers.get('x-total-count')) !== null && _e !== void 0 ? _e : 0;\n                const links = (_g = (_f = response.headers.get('link')) === null || _f === void 0 ? void 0 : _f.split(',')) !== null && _g !== void 0 ? _g : [];\n                if (links.length > 0) {\n                    links.forEach((link) => {\n                        const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1));\n                        const rel = JSON.parse(link.split(';')[1].split('=')[1]);\n                        pagination[`${rel}Page`] = page;\n                    });\n                    pagination.total = parseInt(total);\n                }\n                return { data: Object.assign(Object.assign({}, users), pagination), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n     * Defaults to false for backward compatibility.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id, shouldSoftDelete = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    body: {\n                        should_soft_delete: shouldSoftDelete,\n                    },\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                    xform: (factors) => {\n                        return { data: { factors }, error: null };\n                    },\n                });\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","// Generated by genversion.\nexport const version = '2.28.0';\n//# sourceMappingURL=version.js.map","import { supportsLocalStorage } from './helpers';\nconst localStorageAdapter = {\n    getItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!supportsLocalStorage()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\nexport default localStorageAdapter;\n//# sourceMappingURL=local-storage.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthPKCEGrantCodeExchangeError, AuthInvalidCredentialsError, AuthRetryableFetchError, AuthSessionMissingError, AuthUnknownError, isAuthApiError, isAuthError, } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch';\nimport { decodeJWTPayload, Deferred, getItemAsync, getParameterByName, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, retryable, sleep, generatePKCEVerifier, generatePKCEChallenge, } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n    flowType: 'implicit',\n};\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 30 * 1000;\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3;\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        var _a;\n        this.stateChangeEmitters = new Map();\n        this.autoRefreshTicker = null;\n        this.visibilityChangedCallback = null;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        /**\n         * Used to broadcast state change events to other tabs listening.\n         */\n        this.broadcastChannel = null;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || localStorageAdapter;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.flowType = settings.flowType;\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n        if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n            try {\n                this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey);\n            }\n            catch (e) {\n                console.error('Failed to create a new BroadcastChannel, multi-tab state changes will not be available', e);\n            }\n            (_a = this.broadcastChannel) === null || _a === void 0 ? void 0 : _a.addEventListener('message', (event) => {\n                this._notifyAllSubscribers(event.data.event, event.data.session, false); // broadcast = false so we don't get an endless loop of messages\n            });\n        }\n        this.initialize();\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                const isPKCEFlow = yield this._isPKCEFlow();\n                if ((this.detectSessionInUrl && this._isImplicitGrantFlow()) || isPKCEFlow) {\n                    const { data, error } = yield this._getSessionFromUrl(isPKCEFlow);\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    setTimeout(() => {\n                        if (redirectType === 'recovery') {\n                            this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                        }\n                        else {\n                            this._notifyAllSubscribers('SIGNED_IN', session);\n                        }\n                    }, 0);\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { error };\n                }\n                return {\n                    error: new AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                yield this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     *\n     * Be aware that if a user account exists in the system you may get back an\n     * error message that attempts to hide this information from the user.\n     * This method has support for PKCE via email signups. The PKCE flow cannot be used when autoconfirm is enabled.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            channel: (_c = options === null || options === void 0 ? void 0 : options.channel) !== null && _c !== void 0 ? _c : 'sms',\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or that the\n     * email/phone and password combination is wrong or that the account can only\n     * be accessed via social login.\n     */\n    signInWithPassword(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     * This method supports the PKCE flow.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return yield this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n                skipBrowserRedirect: (_d = credentials.options) === null || _d === void 0 ? void 0 : _d.skipBrowserRedirect,\n            });\n        });\n    }\n    /**\n     * Log in an existing user by exchanging an Auth Code issued during the PKCE flow.\n     */\n    exchangeCodeForSession(authCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const codeVerifier = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=pkce`, {\n                headers: this.headers,\n                body: {\n                    auth_code: authCode,\n                    code_verifier: codeVerifier,\n                },\n                xform: _sessionResponse,\n            });\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            if (error || !data)\n                return { data: { user: null, session: null }, error };\n            if (data.session) {\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('SIGNED_IN', data.session);\n            }\n            return { data, error };\n        });\n    }\n    /**\n     * Allows signing in with an ID token issued by certain supported providers.\n     * The ID token is verified for validity and a new session is established.\n     *\n     * @experimental\n     */\n    signInWithIdToken(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            try {\n                const { options, provider, token, nonce } = credentials;\n                const res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n                    headers: this.headers,\n                    body: {\n                        provider,\n                        id_token: token,\n                        nonce,\n                        gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                    },\n                    xform: _sessionResponse,\n                });\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     *\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     *\n     * Be aware that you may get back an error message that will not distinguish\n     * between the cases where the account does not exist or, that the account\n     * can only be accessed via social login.\n     *\n     * Do note that you will need to configure a Whatsapp sender on Twilio\n     * if you are using phone sign in with the 'whatsapp' channel. The whatsapp\n     * channel is not supported on other providers\n     * at this time.\n     * This method supports PKCE when an email is passed.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d, _e;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    let codeChallenge = null;\n                    let codeChallengeMethod = null;\n                    if (this.flowType === 'pkce') {\n                        const codeVerifier = generatePKCEVerifier();\n                        yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                        codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                        codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                    }\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            code_challenge: codeChallenge,\n                            code_challenge_method: codeChallengeMethod,\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                            channel: (_e = options === null || options === void 0 ? void 0 : options.channel) !== null && _e !== void 0 ? _e : 'sms',\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captcha_token: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: _sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw new Error('An error occurred on token verification.');\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Attempts a single-sign on using an enterprise Identity Provider. A\n     * successful SSO attempt will redirect the current page to the identity\n     * provider authorization page. The redirect URL is implementation and SSO\n     * protocol specific.\n     *\n     * You can use it by providing a SSO domain. Typically you can extract this\n     * domain by asking users for their email address. If this domain is\n     * registered on the Auth instance the redirect will use that organization's\n     * currently active SSO Identity Provider for the login.\n     *\n     * If you have built an organization-specific login page, you can use the\n     * organization's SSO Identity Provider UUID directly instead.\n     */\n    signInWithSSO(params) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                return yield _request(this.fetch, 'POST', `${this.url}/sso`, {\n                    body: Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, ('providerId' in params ? { provider_id: params.providerId } : null)), ('domain' in params ? { domain: params.domain } : null)), { redirect_to: (_b = (_a = params.options) === null || _a === void 0 ? void 0 : _a.redirectTo) !== null && _b !== void 0 ? _b : undefined }), (((_c = params === null || params === void 0 ? void 0 : params.options) === null || _c === void 0 ? void 0 : _c.captchaToken)\n                        ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n                        : null)), { skip_http_redirect: true }),\n                    headers: this.headers,\n                    xform: _ssoResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends a reauthentication OTP to the user's email or phone number.\n     * Requires the user to be signed-in.\n     */\n    reauthenticate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error: sessionError, } = yield this.getSession();\n                if (sessionError)\n                    throw sessionError;\n                if (!session)\n                    throw new AuthSessionMissingError();\n                const { error } = yield _request(this.fetch, 'GET', `${this.url}/reauthenticate`, {\n                    headers: this.headers,\n                    jwt: session.access_token,\n                });\n                return { data: { user: null, session: null }, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Resends an existing signup confirmation email, email change email, SMS OTP or phone change OTP.\n     */\n    resend(credentials) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const endpoint = `${this.url}/resend`;\n                if ('email' in credentials) {\n                    const { email, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                else if ('phone' in credentials) {\n                    const { phone, type, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', endpoint, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            type,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a type');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield getItemAsync(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data for a logged in user.\n     */\n    updateUser(attributes, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token or access token in the current session is invalid, an error will be thrown.\n     * @param currentSession The current session that minimally contains an access token and refresh token.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession.access_token || !currentSession.refresh_token) {\n                    throw new AuthSessionMissingError();\n                }\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                const payload = decodeJWTPayload(currentSession.access_token);\n                if (payload.exp) {\n                    expiresAt = payload.exp;\n                    hasExpired = expiresAt <= timeNow;\n                }\n                if (hasExpired) {\n                    const { session: refreshedSession, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { user: null, session: null }, error: error };\n                    }\n                    if (!refreshedSession) {\n                        return { data: { user: null, session: null }, error: null };\n                    }\n                    session = refreshedSession;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl(isPKCEFlow) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new AuthImplicitGrantRedirectError('No browser detected.');\n                if (this.flowType === 'implicit' && !this._isImplicitGrantFlow()) {\n                    throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                else if (this.flowType == 'pkce' && !isPKCEFlow) {\n                    throw new AuthPKCEGrantCodeExchangeError('Not a valid PKCE flow url.');\n                }\n                if (isPKCEFlow) {\n                    const authCode = getParameterByName('code');\n                    if (!authCode)\n                        throw new AuthPKCEGrantCodeExchangeError('No code detected.');\n                    const { data, error } = yield this.exchangeCodeForSession(authCode);\n                    if (error)\n                        throw error;\n                    if (!data.session)\n                        throw new AuthPKCEGrantCodeExchangeError('No session detected.');\n                    let url = new URL(window.location.href);\n                    url.searchParams.delete('code');\n                    window.history.replaceState(window.history.state, '', url.toString());\n                    return { data: { session: data.session, redirectType: null }, error: null };\n                }\n                const error_description = getParameterByName('error_description');\n                if (error_description) {\n                    const error_code = getParameterByName('error_code');\n                    if (!error_code)\n                        throw new AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = getParameterByName('error');\n                    if (!error)\n                        throw new AuthImplicitGrantRedirectError('No error detected.');\n                    throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = getParameterByName('provider_token');\n                const provider_refresh_token = getParameterByName('provider_refresh_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = getParameterByName('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return (isBrowser() &&\n            (Boolean(getParameterByName('access_token')) ||\n                Boolean(getParameterByName('error_description'))));\n    }\n    /**\n     * Checks if the current URL and backing storage contain parameters given by a PKCE flow\n     */\n    _isPKCEFlow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentStorageContent = yield getItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            return isBrowser() && Boolean(getParameterByName('code')) && Boolean(currentStorageContent);\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error) {\n                    // ignore 404s since user might not exist anymore\n                    // ignore 401s since an invalid or expired JWT should sign out the current session\n                    if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n                        return { error };\n                    }\n                }\n            }\n            yield this._removeSession();\n            yield removeItemAsync(this.storage, `${this.storageKey}-code-verifier`);\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        this.emitInitialSession(id);\n        return { data: { subscription } };\n    }\n    emitInitialSession(id) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: { session }, error, } = yield this.getSession();\n                if (error)\n                    throw error;\n                (_a = this.stateChangeEmitters.get(id)) === null || _a === void 0 ? void 0 : _a.callback('INITIAL_SESSION', session);\n            }\n            catch (err) {\n                (_b = this.stateChangeEmitters.get(id)) === null || _b === void 0 ? void 0 : _b.callback('INITIAL_SESSION', null);\n                console.error(err);\n            }\n        });\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * This method supports the PKCE flow.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let codeChallenge = null;\n            let codeChallengeMethod = null;\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n            }\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: {\n                        email,\n                        code_challenge: codeChallenge,\n                        code_challenge_method: codeChallengeMethod,\n                        gotrue_meta_security: { captcha_token: options.captchaToken },\n                    },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startedAt = Date.now();\n                // will attempt to refresh the token with exponential backoff\n                return yield retryable((attempt) => __awaiter(this, void 0, void 0, function* () {\n                    yield sleep(attempt * 200); // 0, 200, 400, 800, ...\n                    return yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                        body: { refresh_token: refreshToken },\n                        headers: this.headers,\n                        xform: _sessionResponse,\n                    });\n                }), (attempt, _, result) => result &&\n                    result.error &&\n                    result.error instanceof AuthRetryableFetchError &&\n                    // retryable only if the request can be sent before the backoff overflows the tick duration\n                    Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION);\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield this._getUrlForProvider(provider, {\n                redirectTo: options.redirectTo,\n                scopes: options.scopes,\n                queryParams: options.queryParams,\n            });\n            // try to open on the browser\n            if (isBrowser() && !options.skipBrowserRedirect) {\n                window.location.assign(url);\n            }\n            return { data: { provider, url }, error: null };\n        });\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield getItemAsync(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new Deferred();\n                if (!refreshToken) {\n                    throw new AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session, broadcast = true) {\n        if (this.broadcastChannel && broadcast) {\n            this.broadcastChannel.postMessage({ event, session });\n        }\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield removeItemAsync(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n        });\n    }\n    /**\n     * Removes any registered visibilitychange callback.\n     *\n     * {@see #startAutoRefresh}\n     * {@see #stopAutoRefresh}\n     */\n    _removeVisibilityChangedCallback() {\n        const callback = this.visibilityChangedCallback;\n        this.visibilityChangedCallback = null;\n        try {\n            if (callback && isBrowser() && (window === null || window === void 0 ? void 0 : window.removeEventListener)) {\n                window.removeEventListener('visibilitychange', callback);\n            }\n        }\n        catch (e) {\n            console.error('removing visibilitychange callback failed', e);\n        }\n    }\n    /**\n     * This is the private implementation of {@link #startAutoRefresh}. Use this\n     * within the library.\n     */\n    _startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._stopAutoRefresh();\n            const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION);\n            this.autoRefreshTicker = ticker;\n            if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n                // ticker is a NodeJS Timeout object that has an `unref` method\n                // https://nodejs.org/api/timers.html#timeoutunref\n                // When auto refresh is used in NodeJS (like for testing) the\n                // `setInterval` is preventing the process from being marked as\n                // finished and tests run endlessly. This can be prevented by calling\n                // `unref()` on the returned object.\n                ticker.unref();\n                // @ts-ignore\n            }\n            else if (typeof Deno !== 'undefined' && typeof Deno.unrefTimer === 'function') {\n                // similar like for NodeJS, but with the Deno API\n                // https://deno.land/api@latest?unstable&s=Deno.unrefTimer\n                // @ts-ignore\n                Deno.unrefTimer(ticker);\n            }\n            // run the tick immediately\n            yield this._autoRefreshTokenTick();\n        });\n    }\n    /**\n     * This is the private implementation of {@link #stopAutoRefresh}. Use this\n     * within the library.\n     */\n    _stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ticker = this.autoRefreshTicker;\n            this.autoRefreshTicker = null;\n            if (ticker) {\n                clearInterval(ticker);\n            }\n        });\n    }\n    /**\n     * Starts an auto-refresh process in the background. The session is checked\n     * every few seconds. Close to the time of expiration a process is started to\n     * refresh the session. If refreshing fails it will be retried for as long as\n     * necessary.\n     *\n     * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n     * to call this function, it will be called for you.\n     *\n     * On browsers the refresh process works only when the tab/window is in the\n     * foreground to conserve resources as well as prevent race conditions and\n     * flooding auth with requests. If you call this method any managed\n     * visibility change callback will be removed and you must manage visibility\n     * changes on your own.\n     *\n     * On non-browser platforms the refresh process works *continuously* in the\n     * background, which may not be desirable. You should hook into your\n     * platform's foreground indication mechanism and call these methods\n     * appropriately to conserve resources.\n     *\n     * {@see #stopAutoRefresh}\n     */\n    startAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._startAutoRefresh();\n        });\n    }\n    /**\n     * Stops an active auto refresh process running in the background (if any).\n     *\n     * If you call this method any managed visibility change callback will be\n     * removed and you must manage visibility changes on your own.\n     *\n     * See {@link #startAutoRefresh} for more details.\n     */\n    stopAutoRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._removeVisibilityChangedCallback();\n            yield this._stopAutoRefresh();\n        });\n    }\n    /**\n     * Runs the auto refresh token tick.\n     */\n    _autoRefreshTokenTick() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const now = Date.now();\n            try {\n                const { data: { session }, } = yield this.getSession();\n                if (!session || !session.refresh_token || !session.expires_at) {\n                    return;\n                }\n                // session will expire in this many ticks (or has already expired if <= 0)\n                const expiresInTicks = Math.floor((session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION);\n                if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n                    yield this._callRefreshToken(session.refresh_token);\n                }\n            }\n            catch (e) {\n                console.error('Auto refresh tick failed with error. This is likely a transient error.', e);\n            }\n        });\n    }\n    /**\n     * Registers callbacks on the browser / platform, which in-turn run\n     * algorithms when the browser window/tab are in foreground. On non-browser\n     * platforms it assumes always foreground.\n     */\n    _handleVisibilityChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n                if (this.autoRefreshToken) {\n                    // in non-browser environments the refresh token ticker runs always\n                    this.startAutoRefresh();\n                }\n                return false;\n            }\n            try {\n                this.visibilityChangedCallback = () => __awaiter(this, void 0, void 0, function* () { return yield this._onVisibilityChanged(false); });\n                window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', this.visibilityChangedCallback);\n                // now immediately call the visbility changed callback to setup with the\n                // current visbility state\n                yield this._onVisibilityChanged(true); // initial call\n            }\n            catch (error) {\n                console.error('_handleVisibilityChange', error);\n            }\n        });\n    }\n    /**\n     * Callback registered with `window.addEventListener('visibilitychange')`.\n     */\n    _onVisibilityChanged(isInitial) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (document.visibilityState === 'visible') {\n                if (!isInitial) {\n                    // initial visibility change setup is handled in another flow under #initialize()\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n                if (this.autoRefreshToken) {\n                    // in browser environments the refresh token ticker runs only on focused tabs\n                    // which prevents race conditions\n                    this._startAutoRefresh();\n                }\n            }\n            else if (document.visibilityState === 'hidden') {\n                if (this.autoRefreshToken) {\n                    this._stopAutoRefresh();\n                }\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlParams = [`provider=${encodeURIComponent(provider)}`];\n            if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n                urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n            }\n            if (options === null || options === void 0 ? void 0 : options.scopes) {\n                urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n            }\n            if (this.flowType === 'pkce') {\n                const codeVerifier = generatePKCEVerifier();\n                yield setItemAsync(this.storage, `${this.storageKey}-code-verifier`, codeVerifier);\n                const codeChallenge = yield generatePKCEChallenge(codeVerifier);\n                const codeChallengeMethod = codeVerifier === codeChallenge ? 'plain' : 's256';\n                const flowParams = new URLSearchParams({\n                    code_challenge: `${encodeURIComponent(codeChallenge)}`,\n                    code_challenge_method: `${encodeURIComponent(codeChallengeMethod)}`,\n                });\n                urlParams.push(flowParams.toString());\n            }\n            if (options === null || options === void 0 ? void 0 : options.queryParams) {\n                const query = new URLSearchParams(options.queryParams);\n                urlParams.push(query.toString());\n            }\n            return `${this.url}/authorize?${urlParams.join('&')}`;\n        });\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#enroll}\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors`, {\n                    body: {\n                        friendly_name: params.friendlyName,\n                        factor_type: params.factorType,\n                        issuer: params.issuer,\n                    },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                    data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#verify}\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                    body: { code: params.code, challenge_id: params.challengeId },\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n                if (error) {\n                    return { data: null, error };\n                }\n                yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n                this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challenge}\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    return { data: null, error: sessionError };\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                    headers: this.headers,\n                    jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#challengeAndVerify}\n     */\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#listFactors}\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    /**\n     * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n     */\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\n//# sourceMappingURL=constants.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    flowType: 'implicit',\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    /**\n     * Perform a query on a table or a view.\n     *\n     * @param relation - The table or view name to query\n     */\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, flowType, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            flowType,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n            this.changedAccessToken = undefined;\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","export function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    return {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n    };\n}\n//# sourceMappingURL=helpers.js.map","\r\nimport { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = 'https://cjujplctbdbrybujcfly.supabase.co'\r\nconst supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImNqdWpwbGN0YmRicnlidWpjZmx5Iiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODU2MjE3ODIsImV4cCI6MjAwMTE5Nzc4Mn0.S5lDd5jFzWbIJHAgsZ0gOkrNAPhxWzoRi5Niwky0ocg'\r\nconst supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport const getPath = async () => {\r\n    let { data: pathCourse, error } = await supabase\r\n    .from('pathCourse')\r\n    .select('*')   \r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return;\r\n    }\r\n    return pathCourse;\r\n}","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { getPath } from \"../../data/fetch-api\";\r\n\r\nexport class pathCourse extends HTMLElement {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async connectedCallback() {\r\n        try{\r\n            const pathCourses = await getPath();\r\n\r\n             const pathList = document.createElement('div');\r\n             pathList.classList.add('path-list');\r\n            \r\n             pathCourses.forEach((paths) => {\r\n              pathList.innerHTML += `\r\n              <div class=\"card\" style=\"width: 18rem;\">\r\n                <img src=\"${paths.pictUrl}\">\r\n                <div class=\"card-body\">\r\n                    <a>${paths.name}</a>\r\n                </div>\r\n             </div>\r\n              `;\r\n            })\r\n            this.appendChild(pathList); \r\n        } catch (error) {\r\n            console.log(error);\r\n            const errorMessage = document.createElement('p');\r\n            errorMessage.textContent = 'Failed to load restaurant data';\r\n            this.appendChild(errorMessage);\r\n        }\r\n    }\r\n}\r\n\r\ncustomElements.define('path-course', pathCourse);","import { getPath } from \"./data/fetch-api\";\r\nimport { pathCourse } from \"./components/webpages/pathCourse\";\r\n\r\ngetPath();\r\n\r\nconst mainsection = document.getElementById('main-Content');\r\nconst dummy = new pathCourse();\r\nmainsection.appendChild(dummy);"],"names":["leafPrototypes","getProto","global","self","this","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","Object","toString","call","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","value","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","i","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","key","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","module","naiveFallback","window","globalThis","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","getPrototypeOf","t","ns","r","def","current","definition","o","enumerable","toStringTag","FunctionsError","context","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","customFetch","_fetch","args","__awaiter","_arguments","generator","P","fulfilled","step","apply","resolveFetch","setAuth","token","Authorization","invoke","functionName","_a","functionArgs","_headers","stringify","assign","catch","fetchError","isRelayError","data","PostgrestBuilder","builder","shouldThrowOnError","schema","isMaybeSingle","throwOnError","onfulfilled","onrejected","includes","res","async","_b","_c","count","countHeader","match","contentRange","parseInt","code","details","hint","_d","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","c","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","filter","Boolean","forMediatype","rollback","returns","PostgrestFilterBuilder","eq","neq","gt","gte","lt","lte","like","pattern","likeAllOf","patterns","likeAnyOf","ilike","ilikeAllOf","ilikeAnyOf","is","in","cleanedValues","s","RegExp","contains","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","not","operator","or","filters","PostgrestQueryBuilder","head","allowEmpty","insert","defaultToNull","prefersHeaders","reduce","acc","x","concat","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","unshift","DEFAULT_HEADERS","PostgrestClient","relation","URL","rpc","fn","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","REALTIME_PRESENCE_LISTEN_EVENTS","PostgresTypes","Timer","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","setTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","event","ref","payload","Push","channel","timeout","sent","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_on","_cancelTimeout","_matchReceive","trigger","_trigger","destroy","_off","h","RealtimePresence","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","presenceRefsToRemove","func","metas","presence","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","isNaN","console","log","lastIdx","closeBrace","arr","valTrim","_","val","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","presenceState","track","untrack","on","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bind","_e","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","Math","floor","encode","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","values_1","all","kind","msg","connectionState","connecting","Connecting","Open","closing","Closing","Closed","chan","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","StorageError","__isStorageError","isStorageError","StorageApiError","toJSON","StorageUnknownError","originalError","_getErrorMessage","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","duplex","upload","uploadToSignedUrl","createSignedUploadUrl","signedUrl","move","fromPath","toPath","sourceKey","destinationKey","copy","Key","createSignedUrl","expiresIn","transform","downloadQueryParam","download","encodeURI","signedURL","createSignedUrls","paths","datum","renderPath","transformationQuery","transformOptsToQueryString","queryString","getPublicUrl","_queryString","publicUrl","prefixes","list","width","height","resize","quality","StorageBucketApi","listBuckets","getBucket","createBucket","public","file_size_limit","fileSizeLimit","allowed_mime_types","allowedMimeTypes","updateBucket","put","emptyBucket","deleteBucket","StorageClient","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","document","localStorageWriteTests","tested","writable","supportsLocalStorage","localStorage","randomKey","random","setItem","removeItem","getParameterByName","href","results","exec","setItemAsync","storage","getItemAsync","getItem","removeItemAsync","Deferred","promiseConstructor","rej","decodeJWTPayload","base64Url","chr1","chr2","chr3","enc1","enc2","enc3","enc4","base64","decodeBase64URL","dec2hex","dec","substr","generatePKCEVerifier","array","Uint32Array","crypto","charSet","charSetLen","verifier","getRandomValues","generatePKCEChallenge","warn","hashed","randomString","encodedData","TextEncoder","hash","subtle","digest","sha256","btoa","AuthError","__isAuthError","isAuthError","AuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthPKCEGrantCodeExchangeError","AuthRetryableFetchError","_request","jwt","qs","redirectTo","maybeResponse","xform","_sessionResponse","session","refresh_token","expires_in","hasSession","expires_at","round","Date","now","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","p","getOwnPropertySymbols","propertyIsEnumerable","__rest","properties","_noResolveJsonResponse","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","_g","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","getUserById","uid","updateUserById","deleteUser","shouldSoftDelete","should_soft_delete","userId","factors","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","flowType","AUTO_REFRESH_TICK_DURATION","GoTrueClient","stateChangeEmitters","Map","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","admin","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","_notifyAllSubscribers","initialize","_initialize","isPKCEFlow","_isPKCEFlow","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","signUp","password","codeChallenge","codeChallengeMethod","codeVerifier","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","code_challenge","code_challenge_method","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","exchangeCodeForSession","authCode","auth_code","code_verifier","signInWithIdToken","nonce","id_token","signInWithOtp","create_user","shouldCreateUser","verifyOtp","signInWithSSO","provider_id","providerId","domain","skip_http_redirect","reauthenticate","sessionError","getSession","endpoint","currentSession","maybeSession","_isValidSession","_callRefreshToken","getUser","updateUser","sessionData","userError","_decodeJWT","setSession","timeNow","expiresAt","hasExpired","exp","refreshedSession","token_type","refreshSession","history","replaceState","error_code","provider_token","provider_refresh_token","currentStorageContent","isAuthApiError","onAuthStateChange","subscription","emitInitialSession","resetPasswordForEmail","_refreshAccessToken","refreshToken","startedAt","isRetryable","accept","attempt","Infinity","retryable","_getUrlForProvider","postMessage","_persistSession","_removeVisibilityChangedCallback","_startAutoRefresh","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","Deno","unrefTimer","startAutoRefresh","stopAutoRefresh","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","flowParams","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","amr","SupabaseAuthClient","DEFAULT_GLOBAL_OPTIONS","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","SupabaseClient","supabaseUrl","_h","_supabaseUrl","realtimeUrl","authUrl","storageUrl","functionsUrl","defaultStorageKey","hostname","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","globalOptions","applySettingDefaults","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","functions","authHeaders","apikey","_handleTokenChanged","source","changedAccessToken","_regeneratorRuntime","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","_typeof","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","doneResult","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","iter","object","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","supabase","createClient","getPath","_callee","_yield$supabase$from$","pathCourse","_context","arguments","_defineProperties","target","props","descriptor","prim","toPrimitive","_toPrimitive","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","Reflect","construct","instance","sham","Proxy","valueOf","_HTMLElement","subClass","superClass","_inherits","Constructor","protoProps","_connectedCallback","Derived","hasNativeReflectConstruct","_super","Super","NewTarget","ReferenceError","_assertThisInitialized","_possibleConstructorReturn","_classCallCheck","pathCourses","pathList","errorMessage","createElement","classList","add","innerHTML","pictUrl","appendChild","t0","textContent","HTMLElement","customElements","mainsection","getElementById","dummy"],"sourceRoot":""}